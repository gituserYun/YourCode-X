<%
	Connection conn = null;

	// 입력 값 검증
	String userID = sanitize(request.getParameter("userID"));
	String userPassword = sanitize(request.getParameter("userPassword"));
	String userName = sanitize(request.getParameter("userName"));
	String userGender = sanitize(request.getParameter("userGender"));
	String userEmail = sanitize(request.getParameter("userEmail"));

	try {
		// 추가 입력값 검증
		if (userID.isEmpty() || userPassword.isEmpty() || userName.isEmpty() || userGender.isEmpty() || userEmail.isEmpty()) {
			out.println("<script>alert('전부 입력해주세요.')</script>");
			out.println("<script>history.back()</script>");
		} else {
			// 데이터베이스 연결 및 PreparedStatement 사용
			Class.forName("com.mysql.jdbc.Driver");
			conn = DriverManager.getConnection(jdbcurl, dbId, dbPwd);

			String sql = "INSERT INTO user (userID, userPassword, userName, userGender, userEmail) VALUES (?, ?, ?, ?, ?)";
			PreparedStatement pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, userID);
			pstmt.setString(2, userPassword);
			pstmt.setString(3, userName);
			pstmt.setString(4, userGender);
			pstmt.setString(5, userEmail);

			// SQL Injection 대응을 위해 PreparedStatement를 사용하여 쿼리 실행
			if (pstmt.executeUpdate() != 0) {
				out.println("<script>");
				out.println("alert('성공적으로 가입하였습니다.')");
				out.println("location.href='index.jsp'");
				out.println("</script>");
			}
		}
	} catch (SQLIntegrityConstraintViolationException e) {
		out.println("<script>alert('중복된 아이디가 있습니다.')</script>");
		out.println("<script>history.back()</script>");
	} catch (SQLException e) {
		out.println("<script>alert('오류가 발생했습니다.')</script>");
		out.println("<script>history.back()</script>");
		e.printStackTrace();
	} catch (Exception e) {
		out.println("<script>alert('오류가 발생했습니다.')</script>");
		out.println("<script>history.back()</script>");
		e.printStackTrace();
	} finally {
		if (conn != null) {
			try {
				conn.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}
	}
%>

<%
    // 특수문자 필터링을 하기 위한 메소드
    String sanitize(String input) {
        if (input == null) {
            return "";
        } else {
            return input.replaceAll("[\"'\\s;]", "");
        }
    }
%>