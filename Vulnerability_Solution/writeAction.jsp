<%@page import="com.oreilly.servlet.multipart.DefaultFileRenamePolicy" %>
<%@page import="com.oreilly.servlet.MultipartRequest" %>

<% request.setCharacterEncoding("utf-8"); %>
<%
    //upload폴더에 파일 업로드
    String uploadPath=request.getRealPath("/upload");

    int size=5*1024*1024; //5MByte
    String filName="";
    String fileTitle="";

    String fileUpload1="";    //중복 처리된 이름
    String originalName1="";    //중복 처리된 실제 원본

    String fileUpload2="";
    String originalName2="";

    MultipartRequest multi=null;

    try{
        multi = new MultipartRequest(
            request,
            uploadPath,
            size,
            "utf-8",
            new DefaultFileRenamePolicy()
        );
        filName=multi.getParameter("filName");
        fileTitle=multi.getParameter("fileTitle");
        
        //첨부 파일 여러개 가져옴
        Enumeration files = multi.getFileNames();

        while(files.hasMoreElements()){
            String file = (String)files.nextElement();
            String fileSystemName = multi.getFilesystemName(file);

            // 파일 확장자 검증
            if(!isAllowedExtension(getExtension(fileSystemName))){
                throw new Exception("허용되지 않는 파일 확장자입니다.");
            }
        }

        //파일의 이름만 가져옴 -> 전송받은 이름
        //multi에서 해당 이름을 알려주고 실제 시스템상의 이름을 알아냄
        //multi에서 알고 있는(파일)원본 이름을 file1을 통해서 알아냄
        String file1=(String)files.nextElement();
        fileUpload1 = multi.getFilesystemName(file1);
        originalName1 = multi.getOriginalFileName(file1);

        String file2=(String)files.nextElement();
        fileUpload2 = multi.getFilesystemName(file2);
        originalName2 = multi.getOriginalFileName(file2);
    }
    catch(Exception e){
        out.println(e.getMessage());
        System.out.print("파일 업로드 문제 발생: "+e.getMessage());
    }

    // 파일 확장자를 가져오는 메소드
    String getExtension(String fileName){
        int dotPosition = fileName.lastIndexOf('.');
        if(dotPosition != -1 && fileName.length() - 1 > dotPosition){
            return fileName.substring(dotPosition + 1);
        }else{
            return "";
        }
    }

    // 허용되는 확장자인지 확인하는 메소드
    boolean isAllowedExtension(String extension){
        String[] allowed = {"jpg", "png", "gif", "bmp", "pdf", "doc", "docx", "xls", "xlsx", "ppt", "pptx"};
        for(int i=0; i<allowed.length; i++){
            if(extension.equals(allowed[i])){
                return true;
            }
        }
        return false;
    }
%>

<%
        Connection conn = null;

        String SID = (String)session.getAttribute("sid");
        //write.jsp 입력값
        String bbsTitle = multi.getParameter("bbsTitle"); //제목
        String bbsContent = multi.getParameter("bbsContent"); //내용
        String fName = multi.getParameter("fileName"); //파일 작성자
        String fTitle = multi.getParameter("fileTitle"); //파일 제목

        String sql = "INSERT INTO new_bbs VALUES (?,?,?,?,?,?,?,?,?,?)";
        String sql_1 = "SELECT bbsID FROM new_bbs ORDER BY BBSID DESC";
        String sql_4 = "SELECT NOW()";


        String jdbcurl = "jdbc:mysql://192.168.107.128:3306/BBS";
        String dbId = "root";
        String dbPwd = "yun123";
    Class.forName("com.mysql.jdbc.Driver");
    conn = DriverManager.getConnection(jdbcurl, dbId, dbPwd);

        int n1 = 0; //bbsID 지정해주기 위한 변수

        //비 로그인 시
        if(SID == null){
            out.println("<script>");
            out.println("alert('회원만 글을 작성할 수 있습니다. 로그인을 해주세요.')");
            out.println("location.href = 'index.jsp'");
            out.println("</script>");
        }
        //로그인 시
        else{
                if ((bbsTitle == null || bbsTitle.trim().isEmpty()) || (bbsContent == null || bbsContent.trim().isEmpty())) {
                    out.println("<script>");
                    out.println("alert('입력이 안 된 사항이 있습니다.(제목, 내용 필수.)')");
                    out.println("history.back()");
                    out.println("</script>");

                }
                else{
                        try{
                                PreparedStatement pstmt = conn.prepareStatement(sql);

                                //1) bbsId(int)
                                try{
                                        PreparedStatement pstmt_1 = conn.prepareStatement(sql_1);
                                        ResultSet rs_1 = pstmt_1.executeQuery();
                                        if(rs_1.next()){
                                                n1 = rs_1.getInt(1) + 1;
                                        }else{ // 첫 번째 게시물일 경우
                                                n1 = 1;
                                        }

                                }catch(Exception e){
                                        out.println(e.getMessage());
                                }
                                pstmt.setInt(1, n1);
                                //2) bbsTitle(varchar)
                                pstmt.setString(2, bbsTitle);
                                //3) userID
                                pstmt.setString(3, SID);
                                //4) bbsData(datetime)
                                String str4 = "";
                                try{
                                        PreparedStatement pstmt_4 = conn.prepareStatement(sql_4);
                                        ResultSet rs_4 = pstmt_4.executeQuery();
                                        if(rs_4.next()){
                                                // 현재 데이터베이스 시간 값이 들어옴
                                                str4 = rs_4.getString(1);
                                        }
                                }catch(Exception e){
                                        out.println(e.getMessage());
                                }
                                pstmt.setString(4, str4);
                                //5) bbsContent(varchar)
                                pstmt.setString(5, bbsContent);
                                //6) bbsAvailable(int)
                                pstmt.setInt(6, 1);
                                //7) fileUpload1(varchar)
                                pstmt.setString(7, fileUpload1);
                                //8) originalName1(varchar)
                                pstmt.setString(8, originalName1);
                                //9)
                                pstmt.setString(9, fileUpload2);
                                //10)
                                pstmt.setString(10, originalName2);

                            pstmt.executeUpdate();
                            out.println("<script>");
                            out.println("alert('글쓰기가 완료되었습니다.')");
                            out.println("</script>");
                        }catch(Exception e){
                            //out.println("<script>");
                            //out.println("alert('오류가 발생하였습니다. 재접속 부탁드립니다.')");
                            //out.println("</script>");
                            // out.println(e.getMessage());
                        }finally{
                            out.println("<script>");
                            out.println("location.href ='bbs.jsp'");
                            out.println("</script>");
                            out.close();
                        }

                }
        }

%>




<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>게시글 작성</title>
</head>
<body>
</body>
</html>                                